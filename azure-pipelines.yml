# Node.js that uses Angular

trigger: none  # Disable CI trigger since we only want PR triggers

pr:
  branches:
    include:
      - dev
  autoCancel: false

pool:
  name: linux-agent
  demands:
    - npm

variables:
- name: NODE_VERSION
  value: '22.x'
- name: CI
  value: false

stages:
  - stage: Build
    displayName: Build and Test
    jobs:
      - job: Build_Job
        displayName: 'Build Angular Application'
        steps: 
          - task: NodeTool@0
            displayName: 'Use Node.js $(NODE_VERSION)'
            inputs:
              versionSpec: $(NODE_VERSION)
          - script: npm install
            displayName: 'Install dependencies'
            workingDirectory: frontend
          - script: npm run build
            displayName: 'Build application'
            workingDirectory: frontend
          
          - task: ArchiveFiles@2
            displayName: 'Archive build files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/frontend/'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
              verbose: true
            
  - stage: Deploy
    displayName: 'Deploy Application'
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: Deploy_to_Server # Usar um "deployment job" é a prática recomendada
      displayName: 'Deploy to Apache Server'
      environment: 'Producao-Servidor-Web' # Crie este ambiente no menu Pipelines -> Environments
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: CopyFiles@2
              displayName: 'Copia arquivos para o diretório /seeds.ufcspa.edu.br/desenv/'
              inputs:
                SourceFolder: 'frontend'
                Contents: '**'
                TargetFolder: '/var/www/seeds.ufcspa.edu.br/desenv/'
                CleanTargetFolder: true
            - task: Bash@3
              displayName: 'pm2 config'
              inputs:
                targetType: 'inline'
                script: |
                  cd /var/www/seeds.ufcspa.edu.br/desenv/
                  rm -rf node_modules/
                  echo '-> Diretório atual:'
                  pwd
                  echo '-> Arquivos:'
                  ls -la
                  echo '-> npm install --production:'
                  npm install
                  #npm run build
                  pm2 reload seeds.ufcspa-desenv || pm2 start npm --name "seeds.ufcspa-desenv" -- run start-desenv
                  pm2 save